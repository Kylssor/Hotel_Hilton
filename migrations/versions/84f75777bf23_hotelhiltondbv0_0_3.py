"""HotelHiltonDBV0.0.3

Revision ID: 84f75777bf23
Revises: 36fd4087a506
Create Date: 2025-03-25 16:53:37.342276

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84f75777bf23'
down_revision: Union[str, None] = '36fd4087a506'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('iso_code', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('city',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('country_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('employeed', sa.Column('user_name', sa.String(length=50), nullable=True))
    op.drop_constraint('employeed_username_key', 'employeed', type_='unique')
    op.create_unique_constraint(None, 'employeed', ['user_name'])
    op.drop_column('employeed', 'username')
    op.add_column('person', sa.Column('city_id', sa.Uuid(), nullable=False))
    op.create_foreign_key(None, 'person', 'city', ['city_id'], ['id'])
    op.drop_column('person', 'registration_date')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('person', sa.Column('registration_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'person', type_='foreignkey')
    op.drop_column('person', 'city_id')
    op.add_column('employeed', sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'employeed', type_='unique')
    op.create_unique_constraint('employeed_username_key', 'employeed', ['username'])
    op.drop_column('employeed', 'user_name')
    op.drop_table('city')
    op.drop_table('country')
    # ### end Alembic commands ###
